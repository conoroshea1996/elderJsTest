"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable global-require */
/* eslint-disable import/no-dynamic-require */
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
let userHelpers;
let cache;
async function externalHelpers({ settings, query, helpers }) {
    const srcHelpers = path_1.default.join(settings.srcDir, 'helpers/index.js');
    try {
        if (!cache) {
            try {
                fs_1.default.statSync(srcHelpers);
                userHelpers = require(srcHelpers);
                if (typeof userHelpers === 'function') {
                    userHelpers = await userHelpers({ settings, query, helpers });
                }
                cache = userHelpers;
            }
            catch (err) {
                if (err.code === 'ENOENT') {
                    if (settings.debug.automagic) {
                        console.log(`debug.automagic:: We attempted to automatically add in helpers, but we couldn't find the file at ${srcHelpers}.`);
                    }
                }
            }
        }
        else {
            userHelpers = cache;
        }
    }
    catch (e) {
        console.error(`Error importing ${srcHelpers}`);
        console.error(e);
    }
    return userHelpers;
}
exports.default = externalHelpers;
