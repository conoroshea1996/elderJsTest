import build from './build/build';
import partialHydration from './partialHydration/partialHydration';
import { RoutesOptions } from './routes/types';
import { HookOptions } from './hooks/types';
import { ShortcodeDefs } from './shortcodes/types';
import { SettingsOptions, QueryOptions, RequestOptions, RequestsOptions, InitializationOptions } from './utils/types';
declare class Elder {
    bootstrapComplete: Promise<any>;
    markBootstrapComplete: (Object: any) => void;
    settings: SettingsOptions;
    routes: RoutesOptions;
    hooks: Array<HookOptions>;
    data: Object;
    runHook: (string: any, Object: any) => Promise<any>;
    query: QueryOptions;
    allRequests: Array<RequestOptions>;
    serverLookupObject: RequestsOptions;
    errors: any[];
    helpers: {};
    server: any;
    builder: any;
    hookInterface: any;
    shortcodes: ShortcodeDefs;
    router: (any: any) => any;
    constructor(initializationOptions?: InitializationOptions);
    bootstrap(): Promise<any>;
    worker(workerRequests: any): Promise<{
        timings: any[];
        errors: any[];
    }>;
}
export { Elder, build, partialHydration };
