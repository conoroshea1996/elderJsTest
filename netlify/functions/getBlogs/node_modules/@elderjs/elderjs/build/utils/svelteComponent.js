"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getComponentName = void 0;
const mountComponentsInHtml_1 = __importDefault(require("../partialHydration/mountComponentsInHtml"));
const getUniqueId_1 = __importDefault(require("./getUniqueId"));
const getComponentName = (str) => {
    let out = str.replace('.svelte', '').replace('.js', '');
    if (out.includes('/')) {
        out = out.split('/').pop();
    }
    return out;
};
exports.getComponentName = getComponentName;
const svelteComponent = (componentName, folder = 'components') => ({ page, props, hydrateOptions }) => {
    const { ssr, client } = page.settings.$$internal.findComponent(componentName, folder);
    const cleanComponentName = exports.getComponentName(componentName);
    // eslint-disable-next-line import/no-dynamic-require
    const ssrReq = require(ssr);
    const { render, _css: css, _cssMap: cssMap } = ssrReq.default || ssrReq;
    try {
        const { html: htmlOutput, head } = render(props);
        if (page.settings.css === 'inline') {
            if (css && css.length > 0 && page.svelteCss && !hydrateOptions) {
                page.svelteCss.push({ css, cssMap });
            }
        }
        if (head && page.headStack) {
            page.headStack.push({ source: cleanComponentName, priority: 50, string: head });
        }
        const innerHtml = mountComponentsInHtml_1.default({
            html: htmlOutput,
            page,
            hydrateOptions,
        });
        // hydrateOptions.loading=none for server only rendered injected into html
        if (!hydrateOptions || hydrateOptions.loading === 'none') {
            // if a component isn't hydrated we don't need to wrap it in a unique div.
            return innerHtml;
        }
        const id = getUniqueId_1.default();
        const lowerCaseComponent = componentName.toLowerCase();
        const uniqueComponentName = `${lowerCaseComponent}${id}`;
        page.componentsToHydrate.push({
            name: uniqueComponentName,
            hydrateOptions,
            client,
            props: Object.keys(props).length > 0 ? props : false,
            prepared: {},
            id,
        });
        return `<div class="${cleanComponentName.toLowerCase()}-component" id="${uniqueComponentName}">${innerHtml}</div>`;
    }
    catch (e) {
        // console.log(e);
        page.errors.push(e);
    }
    return '';
};
exports.default = svelteComponent;
